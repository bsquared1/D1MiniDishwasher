//Use "LOLIN(Wemos) D1 mini Lite" for the board

#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Update these with values suitable for your network.
const char* ssid     = "SSID";
const char* password = "PASSWORD";



#define server_IP "192.168.0.11"


#define REDPIN            D8
#define GREENPIN            D7
#define BLUEPIN            D6
#define STARTBUTTON            D3
#define CLEARBUTTON            D4

int cleanset = 0; //flag for the clear button
int delayval = 1000; // delay for a second

void callback(char* topic, byte* payload, unsigned int length) {
if ((payload[0]) == 49)//49 is ascii value for 1
      { 
      digitalWrite(GREENPIN, LOW);
      digitalWrite(BLUEPIN, LOW);
      digitalWrite(REDPIN, HIGH);
      }
      else if ((payload[0]) == 50)//50 is ascii value for 2
      { 
      digitalWrite(BLUEPIN, LOW);
      digitalWrite(REDPIN, LOW);
      digitalWrite(GREENPIN, HIGH);
      }
      else if ((payload[0]) == 51)//51 is ascii value for 3
      { 
      digitalWrite(GREENPIN, LOW);
      digitalWrite(REDPIN, LOW);
      digitalWrite(BLUEPIN, HIGH);
      cleanset = 1;
      }
      else if ((payload[0]) == 99)//99 is ascii value for c
      { 
      digitalWrite(GREENPIN, LOW);
      digitalWrite(BLUEPIN, LOW);
      digitalWrite(REDPIN, LOW);
      }
      else {
      digitalWrite(GREENPIN, LOW);
      digitalWrite(BLUEPIN, LOW);
      digitalWrite(REDPIN, LOW);
      }
      
      delay(delayval);

 }




WiFiClient d1client;

PubSubClient client(d1client);


void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    // Attempt to connect
    Serial.println("ReConnecting to MQTT");
    if (client.connect("d1client")) {
      client.subscribe("home/LED");
      client.publish("home/diwbbox","online");
    } 
    else {
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup()
{
  Serial.begin(9600);

  pinMode(STARTBUTTON, INPUT_PULLUP); //set the start button pin to input

  pinMode(CLEARBUTTON, INPUT_PULLUP); //set the clear button pin to input

  pinMode(REDPIN, OUTPUT); // set the red LED pin as an output
  digitalWrite(REDPIN, LOW); //set the LED pin initial state to low
  
  pinMode(GREENPIN, OUTPUT); // set the green LED pin as an output
  digitalWrite(GREENPIN, LOW); //set the LED pin initial state to low
  
  pinMode(BLUEPIN, OUTPUT); // set the blue LED pin as an output
  digitalWrite(BLUEPIN, LOW); //set the LED pin initial state to low
  
  Serial.println("");
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  IPAddress ip(192,168,0,2);
  IPAddress gateway(192,168,0,1);
  IPAddress subnet(255,255,255,0);
  WiFi.config(ip, gateway, subnet);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
  }
  Serial.println("");
  Serial.println("WiFi connected!");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
  Serial.print("ESP Mac Address: ");
  Serial.println(WiFi.macAddress());
  Serial.print("Subnet Mask: ");
  Serial.println(WiFi.subnetMask());
  Serial.print("Gateway IP: ");
  Serial.println(WiFi.gatewayIP());


  delay(1500);
  Serial.println("Connecting to Server");
  client.setServer(server_IP, 1883);
  client.subscribe("home/LED");
  Serial.println("Connected to MQTT");
  client.publish("home/diwbbox","online");
}

void loop()
{
  if (!client.connected()) {
    reconnect();
    Serial.println("Connected to MQTT");
  }
  client.setCallback(callback);
 if (digitalRead(STARTBUTTON) == LOW) {
  client.publish("home/diwbbox","start",true);
  delay(5000); 
 }
 if (digitalRead(CLEARBUTTON) == LOW) {
  if (cleanset == 1) {
    client.publish("home/diwbbox","empty",true);
    delay(5000); 
    cleanset =0;
  }
  else {
    client.publish("home/diwbbox","clean",true);
    delay(5000); 
  }
 }
   
  client.loop();
}
